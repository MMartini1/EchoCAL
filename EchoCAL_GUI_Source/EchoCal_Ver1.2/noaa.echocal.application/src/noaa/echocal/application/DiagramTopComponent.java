/*
 * Copyright (C) 2016 JGodlewski
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */

package noaa.echocal.application;

import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//noaa.echocal.application//Diagram//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "DiagramTopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE", 
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "rightSlidingSide", openAtStartup = false)
@ActionID(category = "Window", id = "noaa.echocal.application.DiagramTopComponent")
@ActionReference(path = "Menu/Tools" , position = 30)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_DiagramAction",
        preferredID = "DiagramTopComponent"
)
@Messages({
    "CTL_DiagramAction=Vessel Diagram",
    "CTL_DiagramTopComponent=Vessel Diagram",
    "HINT_DiagramTopComponent=Vessel Diagram"
})
public final class DiagramTopComponent extends TopComponent {

    public DiagramTopComponent() {
        initComponents();
        setName("Vessel Diagram");
        setToolTipText("Vessel Diagram");
        putClientProperty(TopComponent.PROP_KEEP_PREFERRED_SIZE_WHEN_SLIDED_IN, Boolean.FALSE);
        putClientProperty(TopComponent.PROP_DRAGGING_DISABLED, Boolean.TRUE);
        putClientProperty(TopComponent.PROP_UNDOCKING_DISABLED, Boolean.TRUE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sideViewCoordinateSystemDiagram = new javax.swing.JLabel();
        topViewCoordinateSystemDiagram = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        sideViewCoordinateSystemDiagram.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sideViewCoordinateSystemDiagram.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/NoaaVesselSideViewConfigurationGraphic.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(sideViewCoordinateSystemDiagram, org.openide.util.NbBundle.getMessage(DiagramTopComponent.class, "DiagramTopComponent.sideViewCoordinateSystemDiagram.text")); // NOI18N
        sideViewCoordinateSystemDiagram.setMaximumSize(new java.awt.Dimension(600, 400));
        sideViewCoordinateSystemDiagram.setMinimumSize(new java.awt.Dimension(200, 133));
        sideViewCoordinateSystemDiagram.setPreferredSize(new java.awt.Dimension(600, 400));

        topViewCoordinateSystemDiagram.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        topViewCoordinateSystemDiagram.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/NoaaVesselTopViewConfigurationGraphic.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(topViewCoordinateSystemDiagram, org.openide.util.NbBundle.getMessage(DiagramTopComponent.class, "DiagramTopComponent.topViewCoordinateSystemDiagram.text")); // NOI18N
        topViewCoordinateSystemDiagram.setMaximumSize(new java.awt.Dimension(600, 400));
        topViewCoordinateSystemDiagram.setMinimumSize(new java.awt.Dimension(200, 133));
        topViewCoordinateSystemDiagram.setPreferredSize(new java.awt.Dimension(600, 400));

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(DiagramTopComponent.class, "DiagramTopComponent.jLabel1.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sideViewCoordinateSystemDiagram, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(topViewCoordinateSystemDiagram, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(sideViewCoordinateSystemDiagram, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(topViewCoordinateSystemDiagram, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel sideViewCoordinateSystemDiagram;
    private javax.swing.JLabel topViewCoordinateSystemDiagram;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
